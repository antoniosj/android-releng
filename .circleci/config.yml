# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

references:
  workspace: &workspace
    ~/android-releng

  config_android: &config_android
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JAVA_TOOL_OPTIONS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"

  config_gcloud: &config_gcloud
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
      ERM: dumb

  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: .
      paths:
        - app/ftl-tests
        - build
        - app/build

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace

jobs:
  build:
    <<: *config_android

    steps:
      - checkout

      - restore_cache:
          <<: *cache_key

      - run:
          name: Add YES to License
          command: yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || if [ $? -ne '141' ]; then exit $?; fi;  #Captures SIGPIPE 141 error but still allow repeating "y" to accept all licenses

      - run:
          name: Store Firebase Key
          command: echo $GOOGLE_SERVICES | base64 -di > ~/android-releng/app/google-services.json

      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this
          command: sudo chmod +x ./gradlew

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          <<: *cache_key
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - run:
          name: Run Unit tests
          command: ./gradlew test --stacktrace

      - store_test_results:
          path: app/build/test-results

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/

      - *persist_to_workspace

  test_instrumented:
    <<: *config_gcloud

    steps:
      - *attach_workspace

      - run: apt-get install -y sudo

      - run:
          name: Chmod permissions - setup
          command: sudo chmod +x app/ftl-tests/setup.sh

      - run:
          name: Chmod permissions - run-tests
          command: sudo chmod +x app/ftl-tests/run-tests.sh

      - run:
          name: Setup Google Cloud auth # adjust here later
          command: app/ftl-tests/setup.sh

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test_instrumented:
          requires:
            - build
          filters:
            branches:
              only:
                - ftl
                - master
